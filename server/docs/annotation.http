### annotation - Read
GET {{http-host}}/api/v1/annotations/3
X-Opengraph-User-Id: 1

### annotation - Create
POST {{http-host}}/api/v1/annotations/
Content-Type: application/json
X-Opengraph-User-Id: 1

{
    "image_id": 1,
    "category_id": 3,
    "segmentation_size": [
        224,
        224
    ],
    "segmentation_counts": "hl131Ni6`0Df0[O?Aa0_O3M00000O10000000000000000O1000000O100000000O10mNiK]OW4?mKAS4<PLDo3;SLEm39ULGk39ULGj39_1O1000O1000O1000000000000000000O1000000000000000O1001OO100000O1001eJ]OW4d0eKHR4i1J0000000000000000000O11OO11OO100000bMoKm1Q4RNPLn1P4RNPLn1P4RNPLn1P4RNPLn1P4RNPLm1Q4a000O10O2OO10000000000000000000O1000000000000000O100000O1000000000000000000000000O1000000000O1000000000O10000000000000000000000000000000000000000O10O100000000000000000O10000000000000O100000O100000001]OdKUN00`4]1`KcNK5T5P1[1kNaI5g]4",
    "area": 13465,
    "bbox": [
        8.0,
        136.0,
        196.0,
        88.0
    ],
    "is_crowd": false
}

### annotation - List annotations by image id
GET {{http-host}}/api/v1/annotations/image/3
X-Opengraph-User-Id: 1

### annotation - ReadAll Approved Annotations
GET {{http-host}}/api/v1/annotations/approved
X-Opengraph-User-Id: 1

# ==================== User Annotation Selections ====================

### annotation-selection - Create selection
POST {{http-host}}/api/v1/annotations/selections
Content-Type: application/json
X-Opengraph-User-Id: 1

{
    "image_id": 3,
    "selected_annotation_ids": [4, 5, 7, 8],
    "category_id": 5
}

### annotation-selection - Create selections batch
POST {{http-host}}/api/v1/annotations/selections/batch
Content-Type: application/json
X-Opengraph-User-Id: 1

{
    "selections": [
        {
            "image_id": 3,
            "selected_annotation_ids": [3, 4],
            "category_id": 5
        },
        {
            "image_id": 3,
            "selected_annotation_ids": [3, 4, 5],
            "category_id": 5
        },
        {
            "image_id": 3,
            "selected_annotation_ids": [3, 4],
            "category_id": 5
        }
    ]
}

### annotation-selection - Create another selection (same user, different annotations)
POST {{http-host}}/api/v1/annotations/selections
Content-Type: application/json
X-Opengraph-User-Id: 1

{
    "image_id": 3,
    "selected_annotation_ids": [4, 5, 6],
    "category_id": 5
}

### annotation-selection - Create selection from different user (same annotations to test voting)
POST {{http-host}}/api/v1/annotations/selections
Content-Type: application/json
X-Opengraph-User-Id: 2

{
    "image_id": 3,
    "selected_annotation_ids": [4, 5, 6],
    "category_id": 5
}

### annotation-selection - Get my selections
GET {{http-host}}/api/v1/annotations/selections/me
X-Opengraph-User-Id: 1

### annotation-selection - Get my selections for specific image
GET {{http-host}}/api/v1/annotations/selections/me?image_id=3
X-Opengraph-User-Id: 1

### annotation-selection - Get my pending selections
GET {{http-host}}/api/v1/annotations/selections/me?selection_status=PENDING
X-Opengraph-User-Id: 1

### annotation-selection - Get specific selection by id
GET {{http-host}}/api/v1/annotations/selections/1
X-Opengraph-User-Id: 1

### annotation-selection - Update selection category
PUT {{http-host}}/api/v1/annotations/selections/1
Content-Type: application/json
X-Opengraph-User-Id: 1

{
    "category_id": 7
}

### annotation-selection - Update selection status (admin)
PUT {{http-host}}/api/v1/annotations/selections/1
Content-Type: application/json
X-Opengraph-User-Id: 1

{
    "status": "APPROVED"
}

### annotation-selection - Delete my selection
DELETE {{http-host}}/api/v1/annotations/selections/1
X-Opengraph-User-Id: 1

### annotation-selection - Get selection stats for image
GET {{http-host}}/api/v1/annotations/selections/image/3/stats
X-Opengraph-User-Id: 1

### annotation-selection - Get selections ready for approval
GET {{http-host}}/api/v1/annotations/selections/ready-for-approval
X-Opengraph-User-Id: 1

### annotation-selection - Get selections ready for approval (min 3 votes)
GET {{http-host}}/api/v1/annotations/selections/ready-for-approval?min_selection_count=3
X-Opengraph-User-Id: 1

### annotation-selection - Get selection summary
GET {{http-host}}/api/v1/annotations/selections/summary
X-Opengraph-User-Id: 1

### annotation-selection - Bulk approve selections
POST {{http-host}}/api/v1/annotations/selections/approve-batch
Content-Type: application/json
X-Opengraph-User-Id: 1

[
    {
        "image_id": 3,
        "annotation_ids_key": "1,3,4",
        "category_id": 5
    },
    {
        "image_id": 3,
        "annotation_ids_key": "2,5,6",
        "category_id": 5
    }
]

# ==================== Testing Scenarios ====================

### Test Scenario 1: Multiple users selecting same annotations
# User 1 selects annotations 1,3,4 for image 3
POST {{http-host}}/api/v1/annotations/selections
Content-Type: application/json
X-Opengraph-User-Id: 1

{
    "image_id": 3,
    "selected_annotation_ids": [1, 3, 4],
    "category_id": 5
}

### User 2 selects same annotations 1,3,4 for image 3
POST {{http-host}}/api/v1/annotations/selections
Content-Type: application/json
X-Opengraph-User-Id: 2

{
    "image_id": 3,
    "selected_annotation_ids": [1, 3, 4],
    "category_id": 5
}

### User 3 selects same annotations 1,3,4 for image 3
POST {{http-host}}/api/v1/annotations/selections
Content-Type: application/json
X-Opengraph-User-Id: 3

{
    "image_id": 3,
    "selected_annotation_ids": [1, 3, 4],
    "category_id": 5
}

### Check stats after 3 votes (should show 3 votes for same selection)
GET {{http-host}}/api/v1/annotations/selections/image/3/stats
X-Opengraph-User-Id: 1

### Test Scenario 2: Different order should be normalized to same selection
# User 4 selects annotations in different order but same IDs
POST {{http-host}}/api/v1/annotations/selections
Content-Type: application/json
X-Opengraph-User-Id: 4

{
    "image_id": 3,
    "selected_annotation_ids": [4, 1, 3],
    "category_id": 5
}

### User 5 selects annotations in different order but same IDs
POST {{http-host}}/api/v1/annotations/selections
Content-Type: application/json
X-Opengraph-User-Id: 5

{
    "image_id": 3,
    "selected_annotation_ids": [3, 4, 1],
    "category_id": 5
}

### Check stats after 5 votes (should show 5 votes and auto-approval)
GET {{http-host}}/api/v1/annotations/selections/image/3/stats
X-Opengraph-User-Id: 1

### Test Scenario 3: Different categories for same annotations
# User 6 selects same annotations but different category
POST {{http-host}}/api/v1/annotations/selections
Content-Type: application/json
X-Opengraph-User-Id: 6

{
    "image_id": 3,
    "selected_annotation_ids": [1, 3, 4],
    "category_id": 7
}

### Check stats (should show separate counts for different categories)
GET {{http-host}}/api/v1/annotations/selections/image/3/stats
X-Opengraph-User-Id: 1

### Test Scenario 4: Batch creation for multiple users
# User 1 creates multiple selections at once
POST {{http-host}}/api/v1/annotations/selections/batch
Content-Type: application/json
X-Opengraph-User-Id: 1

{
    "selections": [
        {
            "image_id": 3,
            "selected_annotation_ids": [11, 12, 13],
            "category_id": 8
        },
        {
            "image_id": 4,
            "selected_annotation_ids": [14, 15],
            "category_id": 9
        },
        {
            "image_id": 5,
            "selected_annotation_ids": [16, 17, 18, 19],
            "category_id": 8
        }
    ]
}

### User 2 also creates batch selections with some overlapping choices
POST {{http-host}}/api/v1/annotations/selections/batch
Content-Type: application/json
X-Opengraph-User-Id: 2

{
    "selections": [
        {
            "image_id": 3,
            "selected_annotation_ids": [11, 12, 13],
            "category_id": 8
        },
        {
            "image_id": 4,
            "selected_annotation_ids": [20, 21],
            "category_id": 10
        }
    ]
}
