{
  "openapi": "3.1.0",
  "info": {
    "title": "OpenGraph API",
    "description": "AI/ML model and dataset Web3 blockchain infrastructure server",
    "version": "0.1.0"
  },
  "paths": {
    "/health": {
      "get": {
        "summary": "Health Check",
        "operationId": "health_check_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/users/": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Create User",
        "description": "Create a new user.",
        "operationId": "create_user_api_v1_users__post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get Users",
        "description": "List all users with optional pagination and email filter.",
        "operationId": "get_users_api_v1_users__get",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "건너뛸 개수",
              "default": 0,
              "title": "Skip"
            },
            "description": "건너뛸 개수"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "제한 개수",
              "default": 100,
              "title": "Limit"
            },
            "description": "제한 개수"
          },
          {
            "name": "email_filter",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "이메일 필터",
              "title": "Email Filter"
            },
            "description": "이메일 필터"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserRead"
                  },
                  "title": "Response Get Users Api V1 Users  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/me": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get Current User Info",
        "description": "Get the current user's information.",
        "operationId": "get_current_user_info_api_v1_users_me_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRead"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "users"
        ],
        "summary": "Update Current User",
        "description": "Update the current user's information.",
        "operationId": "update_current_user_api_v1_users_me_put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "users"
        ],
        "summary": "Delete Current User",
        "description": "Delete the current user.",
        "operationId": "delete_current_user_api_v1_users_me_delete",
        "responses": {
          "204": {
            "description": "Successful Response"
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/users/me/profile": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get Current User Profile",
        "description": "Get the current user's profile information.",
        "operationId": "get_current_user_profile_api_v1_users_me_profile_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfile"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/users/{user_id}": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get User",
        "description": "Get a specific user by ID.",
        "operationId": "get_user_api_v1_users__user_id__get",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "users"
        ],
        "summary": "Update User",
        "description": "Update a specific user by ID.\nNote: This endpoint requires admin privileges.",
        "operationId": "update_user_api_v1_users__user_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "users"
        ],
        "summary": "Delete User",
        "description": "Delete a specific user by ID.\nNote: This endpoint requires admin privileges.",
        "operationId": "delete_user_api_v1_users__user_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/{user_id}/profile": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get User Profile",
        "description": "Get a specific user's profile by ID.",
        "operationId": "get_user_profile_api_v1_users__user_id__profile_get",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfile"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/search/by-email": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Search User By Email",
        "description": "Search for a user by email address.",
        "operationId": "search_user_by_email_api_v1_users_search_by_email_get",
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "이메일 주소",
              "title": "Email"
            },
            "description": "이메일 주소"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/search/by-sui-address": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Search User By Sui Address",
        "description": "Search for a user by Sui wallet address.",
        "operationId": "search_user_by_sui_address_api_v1_users_search_by_sui_address_get",
        "parameters": [
          {
            "name": "sui_address",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Sui 지갑 주소",
              "title": "Sui Address"
            },
            "description": "Sui 지갑 주소"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/datasets/": {
      "post": {
        "tags": [
          "datasets"
        ],
        "summary": "Create Dataset",
        "description": "Create a new dataset.",
        "operationId": "create_dataset_api_v1_datasets__post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DatasetCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DatasetRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "datasets"
        ],
        "summary": "Get Datasets",
        "description": "List all datasets.",
        "operationId": "get_datasets_api_v1_datasets__get",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 10,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DatasetListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/datasets/{dataset_id}": {
      "get": {
        "tags": [
          "datasets"
        ],
        "summary": "Get Dataset",
        "description": "Get a dataset by id.",
        "operationId": "get_dataset_api_v1_datasets__dataset_id__get",
        "parameters": [
          {
            "name": "dataset_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Dataset Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DatasetRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "datasets"
        ],
        "summary": "Update Dataset",
        "description": "데이터셋을 업데이트합니다.",
        "operationId": "update_dataset_api_v1_datasets__dataset_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "dataset_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Dataset Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DatasetUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DatasetRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "datasets"
        ],
        "summary": "Delete Dataset",
        "description": "데이터셋을 삭제합니다.",
        "operationId": "delete_dataset_api_v1_datasets__dataset_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "dataset_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Dataset Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/images/": {
      "post": {
        "tags": [
          "images"
        ],
        "summary": "Add Image",
        "description": "Add a new image to specific dataset.",
        "operationId": "add_image_api_v1_images__post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImageCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImageRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "images"
        ],
        "summary": "Get Images",
        "description": "List all images.",
        "operationId": "get_images_api_v1_images__get",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 10,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImageListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/images/{image_id}": {
      "get": {
        "tags": [
          "images"
        ],
        "summary": "Get Image",
        "description": "Get specific image by ID.",
        "operationId": "get_image_api_v1_images__image_id__get",
        "parameters": [
          {
            "name": "image_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Image Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImageRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/dictionaries/": {
      "post": {
        "tags": [
          "dictionaries"
        ],
        "summary": "Create Dictionary",
        "description": "Create a new dictionary",
        "operationId": "create_dictionary_api_v1_dictionaries__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DictionaryCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DictionaryRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/dictionaries/{dictionary_id}": {
      "get": {
        "tags": [
          "dictionaries"
        ],
        "summary": "Get Dictionary",
        "description": "Get a dictionary by ID",
        "operationId": "get_dictionary_api_v1_dictionaries__dictionary_id__get",
        "parameters": [
          {
            "name": "dictionary_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Dictionary Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DictionaryRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/categories/": {
      "post": {
        "tags": [
          "categories"
        ],
        "summary": "Create Category",
        "description": "Create a new category.",
        "operationId": "create_category_api_v1_categories__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CategoryCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/categories/{category_id}": {
      "get": {
        "tags": [
          "categories"
        ],
        "summary": "Get Category",
        "description": "Get a specific category.",
        "operationId": "get_category_api_v1_categories__category_id__get",
        "parameters": [
          {
            "name": "category_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Category Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "categories"
        ],
        "summary": "Update Category",
        "description": "Update a specific category.",
        "operationId": "update_category_api_v1_categories__category_id__put",
        "parameters": [
          {
            "name": "category_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Category Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CategoryUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "categories"
        ],
        "summary": "Delete Category",
        "description": "Delete a specific category.",
        "operationId": "delete_category_api_v1_categories__category_id__delete",
        "parameters": [
          {
            "name": "category_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Category Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/dictionary-categories/": {
      "post": {
        "tags": [
          "dictionary-categories"
        ],
        "summary": "Create Dictionary Category",
        "description": "Create a new dictionary-category association.",
        "operationId": "create_dictionary_category_api_v1_dictionary_categories__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DictionaryCategoryCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DictionaryCategoryRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/dictionary-categories/{dictionary_id}": {
      "get": {
        "tags": [
          "dictionary-categories"
        ],
        "summary": "Get Dictionary Categories",
        "description": "List all categories related to a dictionary.",
        "operationId": "get_dictionary_categories_api_v1_dictionary_categories__dictionary_id__get",
        "parameters": [
          {
            "name": "dictionary_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Dictionary Id"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 10,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/dictionary-categories/{dictionary_id}/{category_id}": {
      "delete": {
        "tags": [
          "dictionary-categories"
        ],
        "summary": "Delete Dictionary Category",
        "description": "Delete a dictionary-category association.",
        "operationId": "delete_dictionary_category_api_v1_dictionary_categories__dictionary_id___category_id__delete",
        "parameters": [
          {
            "name": "dictionary_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Dictionary Id"
            }
          },
          {
            "name": "category_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Category Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/dictionary-categories/batch": {
      "post": {
        "tags": [
          "dictionary-categories"
        ],
        "summary": "Create Dictionary Categories Batch",
        "description": "Create multiple dictionary-category associations for one dictionary.\nAll operations succeed or all fail (atomic transaction).",
        "operationId": "create_dictionary_categories_batch_api_v1_dictionary_categories_batch_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DictionaryCategoryBatchCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/DictionaryCategoryRead"
                  },
                  "type": "array",
                  "title": "Response Create Dictionary Categories Batch Api V1 Dictionary Categories Batch Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/annotations/": {
      "post": {
        "tags": [
          "annotations"
        ],
        "summary": "Create User Annotation",
        "description": "Create a new annotation",
        "operationId": "create_user_annotation_api_v1_annotations__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnnotationUserCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnnotationRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/annotations/approved": {
      "get": {
        "tags": [
          "annotations"
        ],
        "summary": "Get Approved Annotations",
        "description": "List all approved annotations.",
        "operationId": "get_approved_annotations_api_v1_annotations_approved_get",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 10,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnnotationListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/annotations/{annotation_id}": {
      "get": {
        "tags": [
          "annotations"
        ],
        "summary": "Get Annotation",
        "description": "Get a annotation by id",
        "operationId": "get_annotation_api_v1_annotations__annotation_id__get",
        "parameters": [
          {
            "name": "annotation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Annotation Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnnotationRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/annotations/image/{image_id}": {
      "get": {
        "tags": [
          "annotations"
        ],
        "summary": "Get Annotations By Image",
        "description": "Get all annotations for a specific image with client-friendly format (polygon data, no RLE)",
        "operationId": "get_annotations_by_image_api_v1_annotations_image__image_id__get",
        "parameters": [
          {
            "name": "image_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Image Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AnnotationClientRead"
                  },
                  "title": "Response Get Annotations By Image Api V1 Annotations Image  Image Id  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/annotations/image/{image_id}/approved": {
      "get": {
        "tags": [
          "annotations"
        ],
        "summary": "Get Approved Annotations By Image",
        "description": "Get all annotations for a specific image with client-friendly format (polygon data, no RLE)",
        "operationId": "get_approved_annotations_by_image_api_v1_annotations_image__image_id__approved_get",
        "parameters": [
          {
            "name": "image_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Image Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AnnotationClientRead"
                  },
                  "title": "Response Get Approved Annotations By Image Api V1 Annotations Image  Image Id  Approved Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/annotations/selections": {
      "post": {
        "tags": [
          "annotations"
        ],
        "summary": "Create Annotation Selection",
        "description": "Create a new annotation selection\n\nRecords user selections that combine multiple AUTO annotations to form a meaningful entity.\nIf the same selection is made by five or more users, it is automatically marked as APPROVED.",
        "operationId": "create_annotation_selection_api_v1_annotations_selections_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserAnnotationSelectionCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserAnnotationSelectionRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/annotations/selections/batch": {
      "post": {
        "tags": [
          "annotations"
        ],
        "summary": "Create Annotation Selections Batch",
        "description": "Create multiple annotation selections in batch\n\nAllows creating multiple annotation selections at once for efficiency.\nEach selection in the batch is processed independently - some may succeed while others fail.\n\nRequest body example:\n{\n    \"selections\": [\n        {\n            \"image_id\": 3,\n            \"selected_annotation_ids\": [1, 3, 4],\n            \"category_id\": 5\n        },\n        {\n            \"image_id\": 3, \n            \"selected_annotation_ids\": [2, 6, 7],\n            \"category_id\": 7\n        }\n    ]\n}",
        "operationId": "create_annotation_selections_batch_api_v1_annotations_selections_batch_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserAnnotationSelectionBatchCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserAnnotationSelectionBatchResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/annotations/selections/me": {
      "get": {
        "tags": [
          "annotations"
        ],
        "summary": "Get My Annotation Selections",
        "description": "List annotation selections for specific user",
        "operationId": "get_my_annotation_selections_api_v1_annotations_selections_me_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "image_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "특정 이미지의 선택만 조회",
              "title": "Image Id"
            },
            "description": "특정 이미지의 선택만 조회"
          },
          {
            "name": "selection_status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "특정 상태의 선택만 조회 (PENDING|APPROVED|REJECTED)",
              "title": "Selection Status"
            },
            "description": "특정 상태의 선택만 조회 (PENDING|APPROVED|REJECTED)"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "description": "조회할 선택 수",
              "default": 100,
              "title": "Limit"
            },
            "description": "조회할 선택 수"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "건너뛸 선택 수",
              "default": 0,
              "title": "Offset"
            },
            "description": "건너뛸 선택 수"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserAnnotationSelectionRead"
                  },
                  "title": "Response Get My Annotation Selections Api V1 Annotations Selections Me Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/annotations/selections/{selection_id}": {
      "get": {
        "tags": [
          "annotations"
        ],
        "summary": "Get Annotation Selection",
        "description": "Get a annotation selection by id",
        "operationId": "get_annotation_selection_api_v1_annotations_selections__selection_id__get",
        "parameters": [
          {
            "name": "selection_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Selection Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserAnnotationSelectionRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "annotations"
        ],
        "summary": "Update Annotation Selection",
        "description": "Update a annotation selection\n\nMainly used for category update or status change by administrator",
        "operationId": "update_annotation_selection_api_v1_annotations_selections__selection_id__put",
        "parameters": [
          {
            "name": "selection_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Selection Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserAnnotationSelectionUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserAnnotationSelectionRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "annotations"
        ],
        "summary": "Delete Annotation Selection",
        "description": "Delete a annotation selection (only available for that annotator)",
        "operationId": "delete_annotation_selection_api_v1_annotations_selections__selection_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "selection_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Selection Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/annotations/selections/image/{image_id}/stats": {
      "get": {
        "tags": [
          "annotations"
        ],
        "summary": "Get Image Selection Stats",
        "description": "Get annotation selection stats for a specific image\n\nProvides information such as the number of users who made the same selection and whether it qualifies for approval.",
        "operationId": "get_image_selection_stats_api_v1_annotations_selections_image__image_id__stats_get",
        "parameters": [
          {
            "name": "image_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Image Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AnnotationSelectionStats"
                  },
                  "title": "Response Get Image Selection Stats Api V1 Annotations Selections Image  Image Id  Stats Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/annotations/selections/ready-for-approval": {
      "get": {
        "tags": [
          "annotations"
        ],
        "summary": "Get Selections Ready For Approval",
        "description": "Get annotation selections ready for approval\n\nReturns items that have the same selection made by at least the specified minimum number of users.",
        "operationId": "get_selections_ready_for_approval_api_v1_annotations_selections_ready_for_approval_get",
        "parameters": [
          {
            "name": "min_selection_count",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "승인을 위한 최소 선택 수",
              "default": 5,
              "title": "Min Selection Count"
            },
            "description": "승인을 위한 최소 선택 수"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AnnotationSelectionStats"
                  },
                  "title": "Response Get Selections Ready For Approval Api V1 Annotations Selections Ready For Approval Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/annotations/selections/summary": {
      "get": {
        "tags": [
          "annotations"
        ],
        "summary": "Get Selection Summary",
        "description": "Get annotation selection summary\n\nProvides summary information such as total number of selections, distribution by status, and number of selections pending approval.",
        "operationId": "get_selection_summary_api_v1_annotations_selections_summary_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnnotationSelectionSummary"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/annotations/selections/approve-batch": {
      "post": {
        "tags": [
          "annotations"
        ],
        "summary": "Approve Selections Batch",
        "description": "Bulk-approves annotation selections.\n\nUsed by administrators to process selections that are eligible for approval in bulk.",
        "operationId": "approve_selections_batch_api_v1_annotations_selections_approve_batch_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "type": "object"
                },
                "type": "array",
                "title": "Selections To Approve"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/": {
      "get": {
        "summary": "Root",
        "operationId": "root__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AnnotationClientRead": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id",
            "description": "Annotation ID"
          },
          "bbox": {
            "items": {
              "type": "number"
            },
            "type": "array",
            "title": "Bbox",
            "description": "Bounding box [x, y, width, height]"
          },
          "area": {
            "type": "number",
            "title": "Area",
            "description": "Segmentation area"
          },
          "point_coords": {
            "anyOf": [
              {
                "items": {
                  "items": {
                    "type": "number"
                  },
                  "type": "array"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Point Coords",
            "description": "Point coordinates used for SAM"
          },
          "is_crowd": {
            "type": "boolean",
            "title": "Is Crowd",
            "description": "Is crowd annotation",
            "default": false
          },
          "predicted_iou": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Predicted Iou",
            "description": "Predicted IoU from SAM"
          },
          "stability_score": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Stability Score",
            "description": "Stability score from SAM"
          },
          "status": {
            "type": "string",
            "title": "Status",
            "description": "Annotation status"
          },
          "source_type": {
            "type": "string",
            "title": "Source Type",
            "description": "Source type (AUTO or USER)"
          },
          "image_id": {
            "type": "integer",
            "title": "Image Id",
            "description": "Associated image ID"
          },
          "category_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Category Id",
            "description": "Associated category ID"
          },
          "created_by": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By",
            "description": "Creator user ID"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "Creation timestamp"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "description": "Last update timestamp"
          },
          "polygon": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Polygon",
            "description": "Pre-computed polygon data for client rendering"
          }
        },
        "type": "object",
        "required": [
          "id",
          "bbox",
          "area",
          "status",
          "source_type",
          "image_id",
          "created_at",
          "updated_at"
        ],
        "title": "AnnotationClientRead",
        "description": "클라이언트용 어노테이션 읽기 스키마 (RLE 데이터 제외)"
      },
      "AnnotationListResponse": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/AnnotationRead"
            },
            "type": "array",
            "title": "Items",
            "description": "Annotation list"
          },
          "total": {
            "type": "integer",
            "title": "Total",
            "description": "Total count"
          },
          "page": {
            "type": "integer",
            "title": "Page",
            "description": "Current page"
          },
          "limit": {
            "type": "integer",
            "title": "Limit",
            "description": "Page size"
          },
          "pages": {
            "type": "integer",
            "title": "Pages",
            "description": "Total pages"
          }
        },
        "type": "object",
        "required": [
          "items",
          "total",
          "page",
          "limit",
          "pages"
        ],
        "title": "AnnotationListResponse",
        "description": "어노테이션 목록 응답 스키마"
      },
      "AnnotationRead": {
        "properties": {
          "bbox": {
            "items": {
              "type": "number"
            },
            "type": "array",
            "title": "Bbox",
            "description": "Bounding box [x, y, width, height]"
          },
          "area": {
            "type": "number",
            "title": "Area",
            "description": "Segmentation area"
          },
          "segmentation_size": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Segmentation Size",
            "description": "[height, width] of the segmentation"
          },
          "segmentation_counts": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Segmentation Counts",
            "description": "COCO RLE encoding"
          },
          "polygon": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Polygon",
            "description": "Pre-computed polygon data for client rendering"
          },
          "point_coords": {
            "anyOf": [
              {
                "items": {
                  "items": {
                    "type": "number"
                  },
                  "type": "array"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Point Coords",
            "description": "Point coordinates used for SAM"
          },
          "is_crowd": {
            "type": "boolean",
            "title": "Is Crowd",
            "description": "Is crowd annotation",
            "default": false
          },
          "predicted_iou": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Predicted Iou",
            "description": "Predicted IoU from SAM"
          },
          "stability_score": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Stability Score",
            "description": "Stability score from SAM"
          },
          "id": {
            "type": "integer",
            "title": "Id",
            "description": "Annotation ID"
          },
          "status": {
            "type": "string",
            "title": "Status",
            "description": "Annotation status"
          },
          "source_type": {
            "type": "string",
            "title": "Source Type",
            "description": "Source type (AUTO or USER)"
          },
          "image_id": {
            "type": "integer",
            "title": "Image Id",
            "description": "Associated image ID"
          },
          "category_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Category Id",
            "description": "Associated category ID"
          },
          "created_by": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By",
            "description": "Creator user ID"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "Creation timestamp"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "description": "Last update timestamp"
          }
        },
        "type": "object",
        "required": [
          "bbox",
          "area",
          "id",
          "status",
          "source_type",
          "image_id",
          "created_at",
          "updated_at"
        ],
        "title": "AnnotationRead",
        "description": "어노테이션 읽기 스키마"
      },
      "AnnotationSelectionStats": {
        "properties": {
          "image_id": {
            "type": "integer",
            "title": "Image Id"
          },
          "selected_annotation_ids_key": {
            "type": "string",
            "title": "Selected Annotation Ids Key"
          },
          "category_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Category Id"
          },
          "category_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Category Name"
          },
          "selection_count": {
            "type": "integer",
            "title": "Selection Count",
            "description": "동일한 선택을 한 사용자 수"
          },
          "status": {
            "type": "string",
            "title": "Status",
            "description": "현재 상태"
          },
          "first_selected_at": {
            "type": "string",
            "format": "date-time",
            "title": "First Selected At",
            "description": "첫 선택 시각"
          },
          "last_selected_at": {
            "type": "string",
            "format": "date-time",
            "title": "Last Selected At",
            "description": "마지막 선택 시각"
          },
          "is_ready_for_approval": {
            "type": "boolean",
            "title": "Is Ready For Approval",
            "description": "승인 가능 여부 (5명 이상 선택)"
          }
        },
        "type": "object",
        "required": [
          "image_id",
          "selected_annotation_ids_key",
          "category_id",
          "category_name",
          "selection_count",
          "status",
          "first_selected_at",
          "last_selected_at",
          "is_ready_for_approval"
        ],
        "title": "AnnotationSelectionStats",
        "description": "어노테이션 선택 통계 스키마"
      },
      "AnnotationSelectionSummary": {
        "properties": {
          "total_selections": {
            "type": "integer",
            "title": "Total Selections",
            "description": "전체 선택 수"
          },
          "pending_selections": {
            "type": "integer",
            "title": "Pending Selections",
            "description": "대기 중인 선택 수"
          },
          "approved_selections": {
            "type": "integer",
            "title": "Approved Selections",
            "description": "승인된 선택 수"
          },
          "rejected_selections": {
            "type": "integer",
            "title": "Rejected Selections",
            "description": "거부된 선택 수"
          },
          "ready_for_approval": {
            "type": "integer",
            "title": "Ready For Approval",
            "description": "승인 가능한 선택 수"
          },
          "images_with_selections": {
            "type": "integer",
            "title": "Images With Selections",
            "description": "선택이 있는 이미지 수"
          },
          "avg_selections_per_image": {
            "type": "number",
            "title": "Avg Selections Per Image",
            "description": "이미지당 평균 선택 수"
          },
          "active_users": {
            "type": "integer",
            "title": "Active Users",
            "description": "선택에 참여한 사용자 수"
          },
          "avg_selections_per_user": {
            "type": "number",
            "title": "Avg Selections Per User",
            "description": "사용자당 평균 선택 수"
          }
        },
        "type": "object",
        "required": [
          "total_selections",
          "pending_selections",
          "approved_selections",
          "rejected_selections",
          "ready_for_approval",
          "images_with_selections",
          "avg_selections_per_image",
          "active_users",
          "avg_selections_per_user"
        ],
        "title": "AnnotationSelectionSummary",
        "description": "어노테이션 선택 요약 스키마"
      },
      "AnnotationUserCreate": {
        "properties": {
          "bbox": {
            "items": {
              "type": "number"
            },
            "type": "array",
            "title": "Bbox",
            "description": "Bounding box [x, y, width, height]"
          },
          "area": {
            "type": "number",
            "title": "Area",
            "description": "Segmentation area"
          },
          "segmentation_size": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Segmentation Size",
            "description": "[height, width] of the segmentation"
          },
          "segmentation_counts": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Segmentation Counts",
            "description": "COCO RLE encoding"
          },
          "polygon": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Polygon",
            "description": "Pre-computed polygon data for client rendering"
          },
          "point_coords": {
            "anyOf": [
              {
                "items": {
                  "items": {
                    "type": "number"
                  },
                  "type": "array"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Point Coords",
            "description": "Point coordinates used for SAM"
          },
          "is_crowd": {
            "type": "boolean",
            "title": "Is Crowd",
            "description": "Is crowd annotation",
            "default": false
          },
          "predicted_iou": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Predicted Iou",
            "description": "Predicted IoU from SAM"
          },
          "stability_score": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Stability Score",
            "description": "Stability score from SAM"
          },
          "image_id": {
            "type": "integer",
            "title": "Image Id",
            "description": "Associated image ID"
          },
          "category_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Category Id",
            "description": "Associated category ID"
          }
        },
        "type": "object",
        "required": [
          "bbox",
          "area",
          "image_id"
        ],
        "title": "AnnotationUserCreate",
        "description": "사용자가 생성하는 어노테이션 스키마"
      },
      "CategoryCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Category Name"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "CategoryCreate"
      },
      "CategoryListResponse": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/CategoryRead"
            },
            "type": "array",
            "title": "Items",
            "description": "Category list"
          },
          "total": {
            "type": "integer",
            "title": "Total",
            "description": "Total count"
          },
          "page": {
            "type": "integer",
            "title": "Page",
            "description": "Current page"
          },
          "limit": {
            "type": "integer",
            "title": "Limit",
            "description": "Page size"
          },
          "pages": {
            "type": "integer",
            "title": "Pages",
            "description": "Total pages"
          }
        },
        "type": "object",
        "required": [
          "items",
          "total",
          "page",
          "limit",
          "pages"
        ],
        "title": "CategoryListResponse",
        "description": "Category list response schema"
      },
      "CategoryRead": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Category Name"
          },
          "id": {
            "type": "integer",
            "title": "Id",
            "description": "Category ID"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "Creation timestamp"
          }
        },
        "type": "object",
        "required": [
          "name",
          "id",
          "created_at"
        ],
        "title": "CategoryRead"
      },
      "CategoryUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "description": "Category Name"
          }
        },
        "type": "object",
        "title": "CategoryUpdate"
      },
      "DatasetCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Dataset name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Dataset description"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags",
            "description": "Tag list"
          },
          "dictionary_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dictionary Id",
            "description": "Dictionary ID for category validation"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "DatasetCreate",
        "description": "Dataset creation schema"
      },
      "DatasetListItem": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id",
            "description": "Dataset ID"
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Dataset name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Dataset description"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags",
            "description": "Tag list"
          },
          "dictionary_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dictionary Id",
            "description": "Dictionary ID for category validation"
          },
          "created_by": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By",
            "description": "Creator ID"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "Creation timestamp"
          },
          "image_count": {
            "type": "integer",
            "title": "Image Count",
            "description": "Number of images",
            "default": 0
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "created_at"
        ],
        "title": "DatasetListItem",
        "description": "Dataset list item schema"
      },
      "DatasetListResponse": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/DatasetListItem"
            },
            "type": "array",
            "title": "Items",
            "description": "Dataset list"
          },
          "total": {
            "type": "integer",
            "title": "Total",
            "description": "Total count"
          },
          "page": {
            "type": "integer",
            "title": "Page",
            "description": "Current page"
          },
          "limit": {
            "type": "integer",
            "title": "Limit",
            "description": "Page size"
          },
          "pages": {
            "type": "integer",
            "title": "Pages",
            "description": "Total pages"
          }
        },
        "type": "object",
        "required": [
          "items",
          "total",
          "page",
          "limit",
          "pages"
        ],
        "title": "DatasetListResponse",
        "description": "Dataset list response schema"
      },
      "DatasetRead": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Dataset name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Dataset description"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags",
            "description": "Tag list"
          },
          "dictionary_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dictionary Id",
            "description": "Dictionary ID for category validation"
          },
          "id": {
            "type": "integer",
            "title": "Id",
            "description": "Dataset ID"
          },
          "created_by": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By",
            "description": "Creator ID"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "Creation timestamp"
          }
        },
        "type": "object",
        "required": [
          "name",
          "id",
          "created_at"
        ],
        "title": "DatasetRead",
        "description": "Dataset read schema"
      },
      "DatasetUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "description": "Dataset name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Dataset description"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags",
            "description": "Tag list"
          },
          "dictionary_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dictionary Id",
            "description": "Dictionary ID for category validation"
          }
        },
        "type": "object",
        "title": "DatasetUpdate",
        "description": "Dataset update schema"
      },
      "DictionaryCategoryBatchCreate": {
        "properties": {
          "dictionary_id": {
            "type": "integer",
            "title": "Dictionary Id",
            "description": "Dictionary ID"
          },
          "category_ids": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Category Ids",
            "description": "List of Category IDs"
          }
        },
        "type": "object",
        "required": [
          "dictionary_id",
          "category_ids"
        ],
        "title": "DictionaryCategoryBatchCreate",
        "description": "Batch dictionary-category association creation schema"
      },
      "DictionaryCategoryCreate": {
        "properties": {
          "dictionary_id": {
            "type": "integer",
            "title": "Dictionary Id",
            "description": "Dictionary ID"
          },
          "category_id": {
            "type": "integer",
            "title": "Category Id",
            "description": "Category ID"
          }
        },
        "type": "object",
        "required": [
          "dictionary_id",
          "category_id"
        ],
        "title": "DictionaryCategoryCreate",
        "description": "Dictionary-category association creation schema"
      },
      "DictionaryCategoryRead": {
        "properties": {
          "dictionary_id": {
            "type": "integer",
            "title": "Dictionary Id",
            "description": "Dictionary ID"
          },
          "category_id": {
            "type": "integer",
            "title": "Category Id",
            "description": "Category ID"
          }
        },
        "type": "object",
        "required": [
          "dictionary_id",
          "category_id"
        ],
        "title": "DictionaryCategoryRead",
        "description": "Dictionary-category association read schema"
      },
      "DictionaryCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Dictionary name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Dictionary description"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "DictionaryCreate",
        "description": "Dictionary creation schema"
      },
      "DictionaryRead": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Dictionary name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Dictionary description"
          },
          "id": {
            "type": "integer",
            "title": "Id",
            "description": "Dictionary ID"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "Creation timestamp"
          }
        },
        "type": "object",
        "required": [
          "name",
          "id",
          "created_at"
        ],
        "title": "DictionaryRead",
        "description": "Dictionary read schema"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "ImageCreate": {
        "properties": {
          "file_name": {
            "type": "string",
            "title": "File Name",
            "description": "File name"
          },
          "image_url": {
            "type": "string",
            "title": "Image Url",
            "description": "Image URL"
          },
          "width": {
            "type": "integer",
            "title": "Width",
            "description": "Image width in pixels"
          },
          "height": {
            "type": "integer",
            "title": "Height",
            "description": "Image height in pixels"
          },
          "dataset_id": {
            "type": "integer",
            "title": "Dataset Id",
            "description": "Dataset ID"
          }
        },
        "type": "object",
        "required": [
          "file_name",
          "image_url",
          "width",
          "height",
          "dataset_id"
        ],
        "title": "ImageCreate",
        "description": "Image creation schema"
      },
      "ImageListResponse": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/ImageRead"
            },
            "type": "array",
            "title": "Items",
            "description": "Image list"
          },
          "total": {
            "type": "integer",
            "title": "Total",
            "description": "Total count"
          },
          "page": {
            "type": "integer",
            "title": "Page",
            "description": "Current page"
          },
          "limit": {
            "type": "integer",
            "title": "Limit",
            "description": "Page size"
          },
          "pages": {
            "type": "integer",
            "title": "Pages",
            "description": "Total pages"
          }
        },
        "type": "object",
        "required": [
          "items",
          "total",
          "page",
          "limit",
          "pages"
        ],
        "title": "ImageListResponse",
        "description": "Image list response schema "
      },
      "ImageRead": {
        "properties": {
          "file_name": {
            "type": "string",
            "title": "File Name",
            "description": "File name"
          },
          "image_url": {
            "type": "string",
            "title": "Image Url",
            "description": "Image URL"
          },
          "width": {
            "type": "integer",
            "title": "Width",
            "description": "Image width in pixels"
          },
          "height": {
            "type": "integer",
            "title": "Height",
            "description": "Image height in pixels"
          },
          "dataset_id": {
            "type": "integer",
            "title": "Dataset Id",
            "description": "Dataset ID"
          },
          "id": {
            "type": "integer",
            "title": "Id",
            "description": "Image ID"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "Creation timestamp"
          }
        },
        "type": "object",
        "required": [
          "file_name",
          "image_url",
          "width",
          "height",
          "dataset_id",
          "id",
          "created_at"
        ],
        "title": "ImageRead",
        "description": "Image read schema"
      },
      "UserAnnotationSelectionBatchCreate": {
        "properties": {
          "selections": {
            "items": {
              "$ref": "#/components/schemas/UserAnnotationSelectionCreate"
            },
            "type": "array",
            "maxItems": 50,
            "minItems": 1,
            "title": "Selections",
            "description": "List of annotation selections to create"
          }
        },
        "type": "object",
        "required": [
          "selections"
        ],
        "title": "UserAnnotationSelectionBatchCreate",
        "description": "사용자 어노테이션 선택 배치 생성 스키마"
      },
      "UserAnnotationSelectionBatchResponse": {
        "properties": {
          "created_selections": {
            "items": {
              "$ref": "#/components/schemas/UserAnnotationSelectionRead"
            },
            "type": "array",
            "title": "Created Selections",
            "description": "Successfully created annotation selections"
          },
          "total_created": {
            "type": "integer",
            "title": "Total Created",
            "description": "Total number of selections created"
          },
          "auto_approved_count": {
            "type": "integer",
            "title": "Auto Approved Count",
            "description": "Number of selections that triggered auto-approval"
          },
          "merged_annotations_count": {
            "type": "integer",
            "title": "Merged Annotations Count",
            "description": "Number of merged annotations_test created from auto-approvals"
          }
        },
        "type": "object",
        "required": [
          "created_selections",
          "total_created",
          "auto_approved_count",
          "merged_annotations_count"
        ],
        "title": "UserAnnotationSelectionBatchResponse",
        "description": "사용자 어노테이션 선택 배치 생성 응답 스키마"
      },
      "UserAnnotationSelectionCreate": {
        "properties": {
          "image_id": {
            "type": "integer",
            "title": "Image Id",
            "description": "이미지 ID"
          },
          "selected_annotation_ids": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "minItems": 1,
            "title": "Selected Annotation Ids",
            "description": "선택된 어노테이션 ID 목록"
          },
          "category_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Category Id",
            "description": "매핑할 카테고리 ID"
          }
        },
        "type": "object",
        "required": [
          "image_id",
          "selected_annotation_ids"
        ],
        "title": "UserAnnotationSelectionCreate",
        "description": "사용자 어노테이션 선택 생성 스키마"
      },
      "UserAnnotationSelectionRead": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "image_id": {
            "type": "integer",
            "title": "Image Id"
          },
          "category_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Category Id"
          },
          "selected_annotation_ids_key": {
            "type": "string",
            "title": "Selected Annotation Ids Key",
            "description": "정규화된 어노테이션 ID 문자열 키"
          },
          "status": {
            "type": "string",
            "title": "Status",
            "description": "선택 상태"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "selected_annotation_ids": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Selected Annotation Ids",
            "description": "선택된 어노테이션 ID 목록을 computed field로 제공",
            "readOnly": true
          }
        },
        "type": "object",
        "required": [
          "id",
          "user_id",
          "image_id",
          "category_id",
          "selected_annotation_ids_key",
          "status",
          "created_at",
          "selected_annotation_ids"
        ],
        "title": "UserAnnotationSelectionRead",
        "description": "사용자 어노테이션 선택 조회 스키마"
      },
      "UserAnnotationSelectionUpdate": {
        "properties": {
          "category_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Category Id",
            "description": "업데이트할 카테고리 ID"
          },
          "status": {
            "anyOf": [
              {
                "type": "string",
                "pattern": "^(PENDING|APPROVED|REJECTED)$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status",
            "description": "상태 업데이트 (PENDING|APPROVED|REJECTED)"
          }
        },
        "type": "object",
        "title": "UserAnnotationSelectionUpdate",
        "description": "사용자 어노테이션 선택 업데이트 스키마"
      },
      "UserCreate": {
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email",
            "description": "User email address"
          },
          "google_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Google Id",
            "description": "Google OAuth ID"
          },
          "display_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Display Name",
            "description": "Display name"
          },
          "profile_image_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Profile Image Url",
            "description": "Profile image URL"
          },
          "sui_address": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sui Address",
            "description": "Sui wallet address"
          }
        },
        "type": "object",
        "required": [
          "email"
        ],
        "title": "UserCreate",
        "description": "User creation schema"
      },
      "UserProfile": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id",
            "description": "User ID"
          },
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email",
            "description": "User email address"
          },
          "google_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Google Id",
            "description": "Google OAuth ID"
          },
          "display_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Display Name",
            "description": "Display name"
          },
          "profile_image_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Profile Image Url",
            "description": "Profile image URL"
          },
          "sui_address": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sui Address",
            "description": "Sui wallet address"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "Creation timestamp"
          },
          "dataset_count": {
            "type": "integer",
            "title": "Dataset Count",
            "description": "Number of created datasets",
            "default": 0
          },
          "annotation_count": {
            "type": "integer",
            "title": "Annotation Count",
            "description": "Number of created annotations",
            "default": 0
          }
        },
        "type": "object",
        "required": [
          "id",
          "email",
          "created_at"
        ],
        "title": "UserProfile",
        "description": "User profile schema"
      },
      "UserRead": {
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email",
            "description": "User email address"
          },
          "google_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Google Id",
            "description": "Google OAuth ID"
          },
          "display_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Display Name",
            "description": "Display name"
          },
          "profile_image_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Profile Image Url",
            "description": "Profile image URL"
          },
          "sui_address": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sui Address",
            "description": "Sui wallet address"
          },
          "id": {
            "type": "integer",
            "title": "Id",
            "description": "User ID"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "Creation timestamp"
          }
        },
        "type": "object",
        "required": [
          "email",
          "id",
          "created_at"
        ],
        "title": "UserRead",
        "description": "User read schema"
      },
      "UserUpdate": {
        "properties": {
          "email": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email",
            "description": "User email address"
          },
          "google_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Google Id",
            "description": "Google OAuth ID"
          },
          "display_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Display Name",
            "description": "Display name"
          },
          "profile_image_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Profile Image Url",
            "description": "Profile image URL"
          },
          "sui_address": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sui Address",
            "description": "Sui wallet address"
          }
        },
        "type": "object",
        "title": "UserUpdate",
        "description": "User update schema"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    },
    "securitySchemes": {
      "HTTPBearer": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}