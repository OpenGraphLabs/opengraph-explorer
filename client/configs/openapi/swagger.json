{
  "openapi": "3.1.0",
  "info": {
    "title": "OpenGraph API",
    "description": "AI/ML model and dataset Web3 blockchain infrastructure server",
    "version": "0.1.0"
  },
  "paths": {
    "/health": {
      "get": {
        "summary": "Health Check",
        "operationId": "health_check_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/users/": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Create User",
        "description": "Create a new user.",
        "operationId": "create_user_api_v1_users__post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get Users",
        "description": "List all users with optional pagination and email filter.",
        "operationId": "get_users_api_v1_users__get",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "건너뛸 개수",
              "default": 0,
              "title": "Skip"
            },
            "description": "건너뛸 개수"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "제한 개수",
              "default": 100,
              "title": "Limit"
            },
            "description": "제한 개수"
          },
          {
            "name": "email_filter",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "이메일 필터",
              "title": "Email Filter"
            },
            "description": "이메일 필터"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserRead"
                  },
                  "title": "Response Get Users Api V1 Users  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/me": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get Current User Info",
        "description": "Get the current user's information.",
        "operationId": "get_current_user_info_api_v1_users_me_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRead"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "users"
        ],
        "summary": "Update Current User",
        "description": "Update the current user's information.",
        "operationId": "update_current_user_api_v1_users_me_put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "users"
        ],
        "summary": "Delete Current User",
        "description": "Delete the current user.",
        "operationId": "delete_current_user_api_v1_users_me_delete",
        "responses": {
          "204": {
            "description": "Successful Response"
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/users/me/profile": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get Current User Profile",
        "description": "Get the current user's profile information.",
        "operationId": "get_current_user_profile_api_v1_users_me_profile_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfile"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/users/{user_id}": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get User",
        "description": "Get a specific user by ID.",
        "operationId": "get_user_api_v1_users__user_id__get",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "users"
        ],
        "summary": "Update User",
        "description": "Update a specific user by ID.\nNote: This endpoint requires admin privileges.",
        "operationId": "update_user_api_v1_users__user_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "users"
        ],
        "summary": "Delete User",
        "description": "Delete a specific user by ID.\nNote: This endpoint requires admin privileges.",
        "operationId": "delete_user_api_v1_users__user_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/{user_id}/profile": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get User Profile",
        "description": "Get a specific user's profile by ID.",
        "operationId": "get_user_profile_api_v1_users__user_id__profile_get",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfile"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/search/by-email": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Search User By Email",
        "description": "Search for a user by email address.",
        "operationId": "search_user_by_email_api_v1_users_search_by_email_get",
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "이메일 주소",
              "title": "Email"
            },
            "description": "이메일 주소"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/search/by-sui-address": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Search User By Sui Address",
        "description": "Search for a user by Sui wallet address.",
        "operationId": "search_user_by_sui_address_api_v1_users_search_by_sui_address_get",
        "parameters": [
          {
            "name": "sui_address",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Sui 지갑 주소",
              "title": "Sui Address"
            },
            "description": "Sui 지갑 주소"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/datasets/": {
      "post": {
        "tags": [
          "datasets"
        ],
        "summary": "Create Dataset",
        "description": "Create a new dataset.",
        "operationId": "create_dataset_api_v1_datasets__post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DatasetCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DatasetRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "datasets"
        ],
        "summary": "Get Datasets",
        "description": "List all datasets.",
        "operationId": "get_datasets_api_v1_datasets__get",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 10,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DatasetListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/datasets/{dataset_id}": {
      "get": {
        "tags": [
          "datasets"
        ],
        "summary": "Get Dataset",
        "description": "Get a dataset by id.",
        "operationId": "get_dataset_api_v1_datasets__dataset_id__get",
        "parameters": [
          {
            "name": "dataset_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Dataset Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DatasetRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "datasets"
        ],
        "summary": "Update Dataset",
        "description": "데이터셋을 업데이트합니다.",
        "operationId": "update_dataset_api_v1_datasets__dataset_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "dataset_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Dataset Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DatasetUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DatasetRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "datasets"
        ],
        "summary": "Delete Dataset",
        "description": "데이터셋을 삭제합니다.",
        "operationId": "delete_dataset_api_v1_datasets__dataset_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "dataset_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Dataset Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/images/": {
      "post": {
        "tags": [
          "images"
        ],
        "summary": "Add Image",
        "description": "Add a new image to specific dataset.",
        "operationId": "add_image_api_v1_images__post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImageCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImageRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "images"
        ],
        "summary": "Get Images",
        "description": "List all images.",
        "operationId": "get_images_api_v1_images__get",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 10,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImageListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/images/{image_id}": {
      "get": {
        "tags": [
          "images"
        ],
        "summary": "Get Image",
        "description": "Get specific image by ID.",
        "operationId": "get_image_api_v1_images__image_id__get",
        "parameters": [
          {
            "name": "image_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Image Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImageRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/dictionaries/": {
      "post": {
        "tags": [
          "dictionaries"
        ],
        "summary": "Create Dictionary",
        "description": "Create a new dictionary",
        "operationId": "create_dictionary_api_v1_dictionaries__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DictionaryCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DictionaryRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/dictionaries/{dictionary_id}": {
      "get": {
        "tags": [
          "dictionaries"
        ],
        "summary": "Get Dictionary",
        "description": "Get a dictionary by ID",
        "operationId": "get_dictionary_api_v1_dictionaries__dictionary_id__get",
        "parameters": [
          {
            "name": "dictionary_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Dictionary Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DictionaryRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/categories/": {
      "post": {
        "tags": [
          "categories"
        ],
        "summary": "Create Category",
        "description": "Create a new category.",
        "operationId": "create_category_api_v1_categories__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CategoryCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/categories/{category_id}": {
      "get": {
        "tags": [
          "categories"
        ],
        "summary": "Get Category",
        "description": "Get a specific category.",
        "operationId": "get_category_api_v1_categories__category_id__get",
        "parameters": [
          {
            "name": "category_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Category Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "categories"
        ],
        "summary": "Update Category",
        "description": "Update a specific category.",
        "operationId": "update_category_api_v1_categories__category_id__put",
        "parameters": [
          {
            "name": "category_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Category Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CategoryUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "categories"
        ],
        "summary": "Delete Category",
        "description": "Delete a specific category.",
        "operationId": "delete_category_api_v1_categories__category_id__delete",
        "parameters": [
          {
            "name": "category_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Category Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/dictionary-categories/": {
      "post": {
        "tags": [
          "dictionary-categories"
        ],
        "summary": "Create Dictionary Category",
        "description": "Create a new dictionary-category association.",
        "operationId": "create_dictionary_category_api_v1_dictionary_categories__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DictionaryCategoryCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DictionaryCategoryRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/dictionary-categories/{dictionary_id}": {
      "get": {
        "tags": [
          "dictionary-categories"
        ],
        "summary": "Get Dictionary Categories",
        "description": "List all categories related to a dictionary.",
        "operationId": "get_dictionary_categories_api_v1_dictionary_categories__dictionary_id__get",
        "parameters": [
          {
            "name": "dictionary_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Dictionary Id"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 10,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/dictionary-categories/{dictionary_id}/{category_id}": {
      "delete": {
        "tags": [
          "dictionary-categories"
        ],
        "summary": "Delete Dictionary Category",
        "description": "Delete a dictionary-category association.",
        "operationId": "delete_dictionary_category_api_v1_dictionary_categories__dictionary_id___category_id__delete",
        "parameters": [
          {
            "name": "dictionary_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Dictionary Id"
            }
          },
          {
            "name": "category_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Category Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/annotations/": {
      "post": {
        "tags": [
          "annotations"
        ],
        "summary": "Create User Annotation",
        "description": "Create a new annotation",
        "operationId": "create_user_annotation_api_v1_annotations__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnnotationUserCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnnotationRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/annotations/{annotation_id}": {
      "get": {
        "tags": [
          "annotations"
        ],
        "summary": "Get Annotation",
        "description": "Get a annotation by id",
        "operationId": "get_annotation_api_v1_annotations__annotation_id__get",
        "parameters": [
          {
            "name": "annotation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Annotation Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnnotationRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/annotations/image/{image_id}": {
      "get": {
        "tags": [
          "annotations"
        ],
        "summary": "Get Annotations By Image",
        "description": "Get all annotations for a specific image with client-friendly mask information",
        "operationId": "get_annotations_by_image_api_v1_annotations_image__image_id__get",
        "parameters": [
          {
            "name": "image_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Image Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AnnotationRead"
                  },
                  "title": "Response Get Annotations By Image Api V1 Annotations Image  Image Id  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/": {
      "get": {
        "summary": "Root",
        "operationId": "root__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AnnotationRead": {
        "properties": {
          "bbox": {
            "anyOf": [
              {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Bbox",
            "description": "Bounding Box [x, y, width, height]"
          },
          "area": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Area",
            "description": "Annotation area"
          },
          "segmentation_size": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Segmentation Size",
            "description": "Segmentation Size [height, width]"
          },
          "segmentation_counts": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Segmentation Counts",
            "description": "Segmentation RLE Encoding"
          },
          "point_coords": {
            "anyOf": [
              {
                "items": {
                  "items": {
                    "type": "number"
                  },
                  "type": "array"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Point Coords",
            "description": "Point Coordinates [[x, y], [x, y], ...]"
          },
          "is_crowd": {
            "type": "boolean",
            "title": "Is Crowd",
            "description": "Is Crowd",
            "default": false
          },
          "predicted_iou": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Predicted Iou",
            "description": "Predicted IoU"
          },
          "stability_score": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Stability Score",
            "description": "Stability Score"
          },
          "status": {
            "type": "string",
            "enum": [
              "PENDING",
              "APPROVED",
              "REJECTED"
            ],
            "title": "Status",
            "description": "Status of the annotation",
            "default": "PENDING"
          },
          "source_type": {
            "type": "string",
            "enum": [
              "AUTO",
              "USER"
            ],
            "title": "Source Type",
            "description": "Source type of the annotation"
          },
          "image_id": {
            "type": "integer",
            "title": "Image Id",
            "description": "Image ID"
          },
          "category_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Category Id",
            "description": "Category ID"
          },
          "created_by": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By",
            "description": "Creator ID (NULL for AUTO)"
          },
          "id": {
            "type": "integer",
            "title": "Id",
            "description": "Annotation ID"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "Creation timestamp"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "description": "Last update timestamp"
          },
          "mask_info": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mask Info",
            "description": "Client-friendly mask information"
          }
        },
        "type": "object",
        "required": [
          "source_type",
          "image_id",
          "id",
          "created_at",
          "updated_at"
        ],
        "title": "AnnotationRead",
        "description": "Annotation read schema with client-friendly mask information"
      },
      "AnnotationUserCreate": {
        "properties": {
          "bbox": {
            "anyOf": [
              {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Bbox",
            "description": "Bounding Box [x, y, width, height]"
          },
          "area": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Area",
            "description": "Annotation area"
          },
          "segmentation_size": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Segmentation Size",
            "description": "Segmentation Size [height, width]"
          },
          "segmentation_counts": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Segmentation Counts",
            "description": "Segmentation RLE Encoding"
          },
          "point_coords": {
            "anyOf": [
              {
                "items": {
                  "items": {
                    "type": "number"
                  },
                  "type": "array"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Point Coords",
            "description": "Point Coordinates [[x, y], [x, y], ...]"
          },
          "is_crowd": {
            "type": "boolean",
            "title": "Is Crowd",
            "description": "Is Crowd",
            "default": false
          },
          "predicted_iou": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Predicted Iou",
            "description": "Predicted IoU"
          },
          "stability_score": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Stability Score",
            "description": "Stability Score"
          },
          "image_id": {
            "type": "integer",
            "title": "Image Id",
            "description": "Image ID"
          },
          "category_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Category Id",
            "description": "Category ID"
          },
          "created_by": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By",
            "description": "Creator ID (NULL for AUTO)"
          }
        },
        "type": "object",
        "required": [
          "image_id"
        ],
        "title": "AnnotationUserCreate",
        "description": "사용자가 어노테이션을 생성할 때 사용하는 스키마 (source_type, status 제외)"
      },
      "CategoryCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Category Name"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "CategoryCreate"
      },
      "CategoryListResponse": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/CategoryRead"
            },
            "type": "array",
            "title": "Items",
            "description": "Category list"
          },
          "total": {
            "type": "integer",
            "title": "Total",
            "description": "Total count"
          },
          "page": {
            "type": "integer",
            "title": "Page",
            "description": "Current page"
          },
          "limit": {
            "type": "integer",
            "title": "Limit",
            "description": "Page size"
          },
          "pages": {
            "type": "integer",
            "title": "Pages",
            "description": "Total pages"
          }
        },
        "type": "object",
        "required": [
          "items",
          "total",
          "page",
          "limit",
          "pages"
        ],
        "title": "CategoryListResponse",
        "description": "Category list response schema"
      },
      "CategoryRead": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Category Name"
          },
          "id": {
            "type": "integer",
            "title": "Id",
            "description": "Category ID"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "Creation timestamp"
          }
        },
        "type": "object",
        "required": [
          "name",
          "id",
          "created_at"
        ],
        "title": "CategoryRead"
      },
      "CategoryUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "description": "Category Name"
          }
        },
        "type": "object",
        "title": "CategoryUpdate"
      },
      "DatasetCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Dataset name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Dataset description"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags",
            "description": "Tag list"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "DatasetCreate",
        "description": "Dataset creation schema"
      },
      "DatasetListItem": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id",
            "description": "Dataset ID"
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Dataset name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Dataset description"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags",
            "description": "Tag list"
          },
          "created_by": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By",
            "description": "Creator ID"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "Creation timestamp"
          },
          "image_count": {
            "type": "integer",
            "title": "Image Count",
            "description": "Number of images",
            "default": 0
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "created_at"
        ],
        "title": "DatasetListItem",
        "description": "Dataset list item schema"
      },
      "DatasetListResponse": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/DatasetListItem"
            },
            "type": "array",
            "title": "Items",
            "description": "Dataset list"
          },
          "total": {
            "type": "integer",
            "title": "Total",
            "description": "Total count"
          },
          "page": {
            "type": "integer",
            "title": "Page",
            "description": "Current page"
          },
          "limit": {
            "type": "integer",
            "title": "Limit",
            "description": "Page size"
          },
          "pages": {
            "type": "integer",
            "title": "Pages",
            "description": "Total pages"
          }
        },
        "type": "object",
        "required": [
          "items",
          "total",
          "page",
          "limit",
          "pages"
        ],
        "title": "DatasetListResponse",
        "description": "Dataset list response schema"
      },
      "DatasetRead": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Dataset name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Dataset description"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags",
            "description": "Tag list"
          },
          "id": {
            "type": "integer",
            "title": "Id",
            "description": "Dataset ID"
          },
          "created_by": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By",
            "description": "Creator ID"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "Creation timestamp"
          }
        },
        "type": "object",
        "required": [
          "name",
          "id",
          "created_at"
        ],
        "title": "DatasetRead",
        "description": "Dataset read schema"
      },
      "DatasetUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "description": "Dataset name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Dataset description"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags",
            "description": "Tag list"
          }
        },
        "type": "object",
        "title": "DatasetUpdate",
        "description": "Dataset update schema"
      },
      "DictionaryCategoryCreate": {
        "properties": {
          "dictionary_id": {
            "type": "integer",
            "title": "Dictionary Id",
            "description": "Dictionary ID"
          },
          "category_id": {
            "type": "integer",
            "title": "Category Id",
            "description": "Category ID"
          }
        },
        "type": "object",
        "required": [
          "dictionary_id",
          "category_id"
        ],
        "title": "DictionaryCategoryCreate",
        "description": "Dictionary-category association creation schema"
      },
      "DictionaryCategoryRead": {
        "properties": {
          "dictionary_id": {
            "type": "integer",
            "title": "Dictionary Id",
            "description": "Dictionary ID"
          },
          "category_id": {
            "type": "integer",
            "title": "Category Id",
            "description": "Category ID"
          }
        },
        "type": "object",
        "required": [
          "dictionary_id",
          "category_id"
        ],
        "title": "DictionaryCategoryRead",
        "description": "Dictionary-category association read schema"
      },
      "DictionaryCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Dictionary name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Dictionary description"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "DictionaryCreate",
        "description": "Dictionary creation schema"
      },
      "DictionaryRead": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Dictionary name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Dictionary description"
          },
          "id": {
            "type": "integer",
            "title": "Id",
            "description": "Dictionary ID"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "Creation timestamp"
          }
        },
        "type": "object",
        "required": [
          "name",
          "id",
          "created_at"
        ],
        "title": "DictionaryRead",
        "description": "Dictionary read schema"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "ImageCreate": {
        "properties": {
          "file_name": {
            "type": "string",
            "title": "File Name",
            "description": "File name"
          },
          "image_url": {
            "type": "string",
            "title": "Image Url",
            "description": "Image URL"
          },
          "width": {
            "type": "integer",
            "title": "Width",
            "description": "Image width in pixels"
          },
          "height": {
            "type": "integer",
            "title": "Height",
            "description": "Image height in pixels"
          },
          "dataset_id": {
            "type": "integer",
            "title": "Dataset Id",
            "description": "Dataset ID"
          }
        },
        "type": "object",
        "required": [
          "file_name",
          "image_url",
          "width",
          "height",
          "dataset_id"
        ],
        "title": "ImageCreate",
        "description": "Image creation schema"
      },
      "ImageListResponse": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/ImageRead"
            },
            "type": "array",
            "title": "Items",
            "description": "Image list"
          },
          "total": {
            "type": "integer",
            "title": "Total",
            "description": "Total count"
          },
          "page": {
            "type": "integer",
            "title": "Page",
            "description": "Current page"
          },
          "limit": {
            "type": "integer",
            "title": "Limit",
            "description": "Page size"
          },
          "pages": {
            "type": "integer",
            "title": "Pages",
            "description": "Total pages"
          }
        },
        "type": "object",
        "required": [
          "items",
          "total",
          "page",
          "limit",
          "pages"
        ],
        "title": "ImageListResponse",
        "description": "Image list response schema "
      },
      "ImageRead": {
        "properties": {
          "file_name": {
            "type": "string",
            "title": "File Name",
            "description": "File name"
          },
          "image_url": {
            "type": "string",
            "title": "Image Url",
            "description": "Image URL"
          },
          "width": {
            "type": "integer",
            "title": "Width",
            "description": "Image width in pixels"
          },
          "height": {
            "type": "integer",
            "title": "Height",
            "description": "Image height in pixels"
          },
          "dataset_id": {
            "type": "integer",
            "title": "Dataset Id",
            "description": "Dataset ID"
          },
          "id": {
            "type": "integer",
            "title": "Id",
            "description": "Image ID"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "Creation timestamp"
          }
        },
        "type": "object",
        "required": [
          "file_name",
          "image_url",
          "width",
          "height",
          "dataset_id",
          "id",
          "created_at"
        ],
        "title": "ImageRead",
        "description": "Image read schema"
      },
      "UserCreate": {
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email",
            "description": "User email address"
          },
          "google_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Google Id",
            "description": "Google OAuth ID"
          },
          "display_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Display Name",
            "description": "Display name"
          },
          "profile_image_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Profile Image Url",
            "description": "Profile image URL"
          },
          "sui_address": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sui Address",
            "description": "Sui wallet address"
          }
        },
        "type": "object",
        "required": [
          "email"
        ],
        "title": "UserCreate",
        "description": "User creation schema"
      },
      "UserProfile": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id",
            "description": "User ID"
          },
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email",
            "description": "User email address"
          },
          "google_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Google Id",
            "description": "Google OAuth ID"
          },
          "display_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Display Name",
            "description": "Display name"
          },
          "profile_image_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Profile Image Url",
            "description": "Profile image URL"
          },
          "sui_address": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sui Address",
            "description": "Sui wallet address"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "Creation timestamp"
          },
          "dataset_count": {
            "type": "integer",
            "title": "Dataset Count",
            "description": "Number of created datasets",
            "default": 0
          },
          "annotation_count": {
            "type": "integer",
            "title": "Annotation Count",
            "description": "Number of created annotations",
            "default": 0
          }
        },
        "type": "object",
        "required": [
          "id",
          "email",
          "created_at"
        ],
        "title": "UserProfile",
        "description": "User profile schema"
      },
      "UserRead": {
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email",
            "description": "User email address"
          },
          "google_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Google Id",
            "description": "Google OAuth ID"
          },
          "display_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Display Name",
            "description": "Display name"
          },
          "profile_image_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Profile Image Url",
            "description": "Profile image URL"
          },
          "sui_address": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sui Address",
            "description": "Sui wallet address"
          },
          "id": {
            "type": "integer",
            "title": "Id",
            "description": "User ID"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "Creation timestamp"
          }
        },
        "type": "object",
        "required": [
          "email",
          "id",
          "created_at"
        ],
        "title": "UserRead",
        "description": "User read schema"
      },
      "UserUpdate": {
        "properties": {
          "email": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email",
            "description": "User email address"
          },
          "google_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Google Id",
            "description": "Google OAuth ID"
          },
          "display_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Display Name",
            "description": "Display name"
          },
          "profile_image_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Profile Image Url",
            "description": "Profile image URL"
          },
          "sui_address": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sui Address",
            "description": "Sui wallet address"
          }
        },
        "type": "object",
        "title": "UserUpdate",
        "description": "User update schema"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    },
    "securitySchemes": {
      "HTTPBearer": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}